{
    "appid": "6dcc0a06-ceb4-4412-834e-b8576a7486a6",
    "name": "Databricks",
    "description": "Integrate with Databricks",
    "publisher": "Splunk",
    "package_name": "phantom_databricks",
    "type": "information",
    "license": "Copyright (c) 2023 Splunk Inc.",
    "main_module": "databricks_connector.py",
    "app_version": "1.0.0",
    "utctime_updated": "2022-02-04T18:14:51.000000Z",
    "product_vendor": "Databricks",
    "product_name": "Databricks",
    "product_version_regex": ".*",
    "min_phantom_version": "5.4.0",
    "python_version": "3",
    "fips_compliant": true,
    "latest_tested_versions": [
        "Cloud API, November 17, 2022"
    ],
    "logo": "logo_databricks.svg",
    "logo_dark": "logo_databricks_dark.svg",
    "require_auth_token": false,
    "configuration": {
        "host": {
            "description": "Databricks Host",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "order": 1
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "order": 2
        },
        "token": {
            "description": "Authentication Token",
            "data_type": "password",
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Verify connectivity using the configured credentials",
            "verbose": "Checks that the provided bot token is valid and grabs information about the configured bot user.",
            "type": "test",
            "identifier": "test_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "create alert",
            "description": "Create a new alert for Splunk SOAR to poll",
            "type": "generic",
            "identifier": "create_alert",
            "read_only": false,
            "parameters": {
                "name": {
                    "description": "Name of channel",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "query_id": {
                    "description": "ID of the query evaluated by the alert",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "column": {
                    "description": "Name of column in the query result to compare in alert evaluation",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "operator": {
                    "description": "Operator used to compare in alert evaluation",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        ">",
                        ">=",
                        "<",
                        "<=",
                        "==",
                        "!="
                    ],
                    "order": 3
                },
                "value": {
                    "description": "Value used to compare in alert evaluation",
                    "data_type": "string",
                    "required": true,
                    "order": 4
                },
                "custom_body": {
                    "description": "Custom body of alert notification",
                    "data_type": "string",
                    "order": 5
                },
                "custom_subject": {
                    "description": "Custom subject of alert notification",
                    "data_type": "string",
                    "order": 6
                },
                "muted": {
                    "description": "Whether or not the alert is muted",
                    "data_type": "boolean",
                    "default": false,
                    "order": 7
                },
                "schedule_failures": {
                    "description": "Number of failures encountered during alert refresh. This counter is used for sending aggregated alert failure email notifications",
                    "data_type": "numeric",
                    "order": 8
                },
                "rearm": {
                    "description": "Number of seconds after being triggered before the alert rearms itself and can be triggered again. If not set, alert will never be triggered again",
                    "data_type": "numeric",
                    "order": 9
                },
                "parent": {
                    "description": "The identifier of the workspace folder containing the alert. The default is the user's home folder",
                    "data_type": "string",
                    "order": 10
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "example_values": [
                        "fc833528-33e6-4f6f-8ea8-3625cf1e778e"
                    ]
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.id",
                    "data_type": "numeric",
                    "example_values": [
                        1234567891234567
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.name",
                    "data_type": "string",
                    "example_values": [
                        "John Doe"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.email",
                    "data_type": "string",
                    "example_values": [
                        "johndoe@example.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.is_db_admin",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.profile_image_url",
                    "data_type": "string",
                    "example_values": [
                        "https://www.gravatar.com/avatar/123456789abcdef123456789abcdef12?s=40&d=identicon"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.id",
                    "data_type": "string",
                    "example_values": [
                        "4cace055-7ffa-48b6-baca-e7d354531d6c"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.name",
                    "data_type": "string",
                    "example_values": [
                        "sample query"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.query",
                    "data_type": "string",
                    "example_values": [
                        "SELECT\n  concat(pickup_zip, '-', dropoff_zip) as route,\n  AVG(fare_amount) as average_fare\nFROM\n  `samples`.`nyctaxi`.`trips`\nGROUP BY\n  1\nORDER BY\n  2 DESC\nLIMIT 1000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.is_safe",
                    "data_type": "boolean",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.apply_auto_limit",
                    "data_type": "boolean",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.folder_node_status",
                    "data_type": "string",
                    "example_values": [
                        "ACTIVE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.folder_node_internal_name",
                    "data_type": "string",
                    "example_values": [
                        "tree/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        1234567891234567
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.version",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.is_draft",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.schedule",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.query.created_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T01:44:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.updated_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T01:48:00Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.query.is_archived",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.run_as_role",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.query.data_source_id",
                    "data_type": "string",
                    "example_values": [
                        "468e81e8-b8f4-49f6-a817-3aaa221f3b88"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.run_as_service_principal_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.rearm",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.state",
                    "data_type": "string",
                    "example_values": [
                        "unknown"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.op",
                    "data_type": "string",
                    "example_values": [
                        ">"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.muted",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.value",
                    "data_type": "string",
                    "example_values": [
                        "80"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.column",
                    "data_type": "string",
                    "example_values": [
                        "average_fare"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/3042705489298866"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.query_plan",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.options.folder_node_status",
                    "data_type": "string",
                    "example_values": [
                        "ACTIVE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.folder_node_internal_name",
                    "data_type": "string",
                    "example_values": [
                        "tree/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        1234567891234567
                    ]
                },
                {
                    "data_path": "action_result.data.*.created_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T02:06:45Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.updated_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T02:06:45Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.is_archived",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.permission_tier",
                    "data_type": "string",
                    "example_values": [
                        "CAN_MANAGE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.last_triggered_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully created alert"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully created alert"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.parameter.muted",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string",
                    "example_values": [
                        "80"
                    ]
                },
                {
                    "data_path": "action_result.parameter.column",
                    "data_type": "string",
                    "example_values": [
                        "average_fare"
                    ]
                },
                {
                    "data_path": "action_result.parameter.custom_body",
                    "data_type": "string",
                    "example_values": [
                        "example template"
                    ]
                },
                {
                    "data_path": "action_result.parameter.custom_subject",
                    "data_type": "string",
                    "example_values": [
                        "example template"
                    ]
                },
                {
                    "data_path": "action_result.parameter.operator",
                    "data_type": "string",
                    "example_values": [
                        ">"
                    ]
                },
                {
                    "data_path": "action_result.parameter.query_id",
                    "data_type": "string",
                    "example_values": [
                        "4cace055-7ffa-48b6-baca-e7d354531d6c"
                    ]
                },
                {
                    "data_path": "action_result.parameter.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rearm",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.schedule_failures",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete alert",
            "description": "Remove alert for Splunk SOAR to poll",
            "type": "generic",
            "identifier": "delete_alert",
            "read_only": false,
            "parameters": {
                "alert_id": {
                    "description": "ID of the alert to delete",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully deleted alert"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully deleted alert"
                    ]
                },
                {
                    "data_path": "action_result.parameter.alert_id",
                    "data_type": "string",
                    "example_values": [
                        "fc833528-33e6-4f6f-8ea8-3625cf1e778e"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "perform query",
            "description": "Perform a SQL query on your databricks instance",
            "type": "generic",
            "identifier": "perform_query",
            "read_only": false,
            "parameters": {
                "task_key": {
                    "description": "A unique name for the SQL query task",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "query_id": {
                    "description": "The ID of the SQL query to run",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "warehouse_id": {
                    "description": "The ID of the SQL warehouse",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "parameters": {
                    "description": "Parameters to be used for each run of this query task",
                    "data_type": "string",
                    "order": 3
                },
                "existing_cluster_id": {
                    "description": "The ID of an existing cluster to use for all runs of this task",
                    "data_type": "string",
                    "order": 4
                },
                "new_cluster": {
                    "description": "An object specifying the details of the new cluster to use for all runs of this task",
                    "data_type": "string",
                    "order": 5
                },
                "libraries": {
                    "description": "An optional list of libraries to be installed on the cluster that executes the task",
                    "data_type": "string",
                    "order": 6
                },
                "timeout_seconds": {
                    "description": "An optional timeout applied to each run of this job task",
                    "data_type": "string",
                    "order": 7
                },
                "run_name": {
                    "description": "An optional name for the run",
                    "data_type": "string",
                    "order": 8
                },
                "idempotency_token": {
                    "description": "An optional token that can be used to guarantee the idempotency of job run requests. If a run with the provided token already exists, the request does not create a new run but returns the info of the existing run instead. If a run with the provided token is deleted, an error is returned",
                    "data_type": "string",
                    "order": 9
                },
                "access_control_list": {
                    "description": "List of permissions to set for the run",
                    "data_type": "string",
                    "order": 10
                }
            },
            "output": [],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "execute notebook",
            "description": "Execute a databricks notebook",
            "type": "generic",
            "identifier": "execute_notebook",
            "read_only": false,
            "parameters": {},
            "output": [],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Ingest tickets from Databricks",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 0
                },
                "end_time": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 1
                },
                "container_id": {
                    "data_type": "string",
                    "description": "Parameter ignored in this app",
                    "order": 2
                },
                "container_count": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 3
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 4
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "PyJWT",
                "input_file": "wheels/py3/PyJWT-2.4.0-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2022.12.7-py3-none-any.whl"
            },
            {
                "module": "charset_normalizer",
                "input_file": "wheels/py3/charset_normalizer-2.0.12-py3-none-any.whl"
            },
            {
                "module": "click",
                "input_file": "wheels/py3/click-8.0.4-py3-none-any.whl"
            },
            {
                "module": "databricks_cli",
                "input_file": "wheels/py3/databricks_cli-0.17.6-py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/py3/idna-3.4-py3-none-any.whl"
            },
            {
                "module": "importlib_metadata",
                "input_file": "wheels/py3/importlib_metadata-4.8.3-py3-none-any.whl"
            },
            {
                "module": "oauthlib",
                "input_file": "wheels/py3/oauthlib-3.2.2-py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/shared/requests-2.27.1-py2.py3-none-any.whl"
            },
            {
                "module": "six",
                "input_file": "wheels/shared/six-1.16.0-py2.py3-none-any.whl"
            },
            {
                "module": "tabulate",
                "input_file": "wheels/py3/tabulate-0.8.10-py3-none-any.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.1.1-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.15-py2.py3-none-any.whl"
            },
            {
                "module": "zipp",
                "input_file": "wheels/py3/zipp-3.6.0-py3-none-any.whl"
            }
        ]
    },
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "PyJWT",
                "input_file": "wheels/py3/PyJWT-2.6.0-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2022.12.7-py3-none-any.whl"
            },
            {
                "module": "charset_normalizer",
                "input_file": "wheels/py39/charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            },
            {
                "module": "click",
                "input_file": "wheels/py3/click-8.1.3-py3-none-any.whl"
            },
            {
                "module": "databricks_cli",
                "input_file": "wheels/py3/databricks_cli-0.17.6-py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/py3/idna-3.4-py3-none-any.whl"
            },
            {
                "module": "oauthlib",
                "input_file": "wheels/py3/oauthlib-3.2.2-py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/py3/requests-2.28.2-py3-none-any.whl"
            },
            {
                "module": "six",
                "input_file": "wheels/shared/six-1.16.0-py2.py3-none-any.whl"
            },
            {
                "module": "tabulate",
                "input_file": "wheels/py3/tabulate-0.9.0-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.15-py2.py3-none-any.whl"
            }
        ]
    }
}
