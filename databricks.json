{
    "appid": "6dcc0a06-ceb4-4412-834e-b8576a7486a6",
    "name": "Databricks",
    "description": "Integrate with Databricks",
    "publisher": "Splunk",
    "package_name": "phantom_databricks",
    "type": "information",
    "license": "Copyright (c) 2023 Splunk Inc.",
    "main_module": "databricks_connector.py",
    "app_version": "1.0.0",
    "utctime_updated": "2022-02-04T18:14:51.000000Z",
    "product_vendor": "Databricks",
    "product_name": "Databricks",
    "product_version_regex": ".*",
    "min_phantom_version": "5.4.0",
    "python_version": "3",
    "fips_compliant": true,
    "latest_tested_versions": [
        "Cloud API, November 17, 2022"
    ],
    "logo": "logo_databricks.svg",
    "logo_dark": "logo_databricks_dark.svg",
    "require_auth_token": false,
    "configuration": {
        "host": {
            "description": "Databricks Host",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "order": 1
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "order": 2
        },
        "token": {
            "description": "Authentication Token",
            "data_type": "password",
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Verify connectivity using the configured credentials",
            "verbose": "Checks that the provided bot token is valid and grabs information about the configured bot user.",
            "type": "test",
            "identifier": "test_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list alerts",
            "description": "List alerts",
            "type": "generic",
            "identifier": "list_alerts",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.data.*.*.id",
                    "data_type": "string",
                    "example_values": [
                        "1ad424e7-323e-4c78-875a-d1c29831160c"
                    ],
                    "contains": [
                        "databricks alert id"
                    ],
                    "column_name": "Alert Id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.*.name",
                    "data_type": "string",
                    "example_values": [
                        "my new test alert"
                    ],
                    "column_name": "Alert Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.*.user.id",
                    "data_type": "numeric",
                    "example_values": [
                        7499675406330167
                    ],
                    "column_name": "User Id",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.*.user.name",
                    "data_type": "string",
                    "example_values": [
                        "Ryan Russell"
                    ],
                    "column_name": "User Name",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.*.user.email",
                    "data_type": "string",
                    "example_values": [
                        "rrussell@splunk.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.id",
                    "data_type": "string",
                    "example_values": [
                        "738f7950-c5f7-4c75-b364-47eac73439dd"
                    ],
                    "column_name": "Query Id",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.*.query.name",
                    "data_type": "string",
                    "example_values": [
                        "Total Trips"
                    ],
                    "column_name": "Query Name",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.*.query.tags",
                    "data_type": "string",
                    "example_values": [
                        "Sample"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.query",
                    "data_type": "string",
                    "example_values": [
                        "USE CATALOG SAMPLES;\n\nSELECT\n  count(*) as total_trips\nFROM\n  `samples`.`nyctaxi`.`trips`\nWHERE\n  tpep_pickup_datetime BETWEEN TIMESTAMP '{{ pickup_date.start }}'\n  AND TIMESTAMP '{{ pickup_date.end }}'\n  AND pickup_zip IN ({{ pickupzip }})"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.is_safe",
                    "data_type": "numeric",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/3494881372287936"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.name",
                    "data_type": "string",
                    "example_values": [
                        "pickup_date"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.type",
                    "data_type": "string",
                    "example_values": [
                        "datetime-range"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.title",
                    "data_type": "string",
                    "example_values": [
                        "Data Range"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.value.end",
                    "data_type": "string",
                    "example_values": [
                        "2016-01-16 12:07"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.value.start",
                    "data_type": "string",
                    "example_values": [
                        "2016-01-01 12:07"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.parentWidgetId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.value",
                    "data_type": "string",
                    "example_values": [
                        "10001"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.global",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.enumOptions",
                    "data_type": "string",
                    "example_values": [
                        "10154\n10065\n10014\n10029\n10019\n10152\n11222\n11221\n10006\n10460\n10028\n10007\n10271\n10009\n11103\n10278\n11106\n10044\n11373\n11102\n10452\n10199\n11231\n11238\n10119\n11215\n11237\n10022\n10112\n10020\n10013\n10026\n11372\n11417\n11235\n11422\n10005\n10115\n11435\n11207\n10002\n10016\n10171\n11210\n11430\n10025\n10032\n10111\n10031\n11230\n10021\n10003\n11377\n10001\n11370\n10454\n10038\n11216\n11105\n10017\n10035\n10153\n10463\n10110\n10282\n10027\n10012\n10023\n10011\n10167\n11104\n10037\n10162\n11201\n11205\n11371\n11226\n10018\n11101\n11206\n10034\n10103\n11217\n10280\n10069\n11211\n10030\n11225\n7002\n10039\n7030\n10468\n11209\n11109\n7310\n11436\n7737\n11375\n11369\n11223\n7087\n11224\n10502\n10451\n11220\n10474\n11424\n11420\n11212\n7311\n11356\n7114\n11368\n10470\n7086\n10024\n11418\n10305\n7718\n11233\n11378\n11003\n11423\n11355\n11208\n11218\n7974\n8876"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.multiValuesOptions.prefix",
                    "data_type": "string",
                    "example_values": [
                        ""
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.multiValuesOptions.suffix",
                    "data_type": "string",
                    "example_values": [
                        ""
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.parameters.*.multiValuesOptions.separator",
                    "data_type": "string",
                    "example_values": [
                        ","
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.run_as_role",
                    "data_type": "string",
                    "example_values": [
                        "viewer"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.apply_auto_limit",
                    "data_type": "numeric",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.folder_node_status",
                    "data_type": "string",
                    "example_values": [
                        "ACTIVE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.options.folder_node_internal_name",
                    "data_type": "string",
                    "example_values": [
                        "tree/3494881372287938"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        7499675406330167
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.version",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.is_draft",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.schedule",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.query.created_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-04-26T22:10:39Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.updated_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-04-26T22:10:39Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.query.is_archived",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.run_as_role",
                    "data_type": "string",
                    "example_values": [
                        "viewer"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.warehouse_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.query.data_source_id",
                    "data_type": "string",
                    "example_values": [
                        "468e81e8-b8f4-49f6-a817-3aaa221f3b88"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.query.run_as_service_principal_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.rearm",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.state",
                    "data_type": "string",
                    "example_values": [
                        "unknown"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.op",
                    "data_type": "string",
                    "example_values": [
                        ">"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.muted",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.value",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.column",
                    "data_type": "string",
                    "example_values": [
                        "total_trips"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/3042705489298866"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.query_plan",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.options.aggregation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.options.display_column",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.options.empty_result_state",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.options.folder_node_status",
                    "data_type": "string",
                    "example_values": [
                        "ACTIVE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.options.folder_node_internal_name",
                    "data_type": "string",
                    "example_values": [
                        "tree/3494881372287944"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        7499675406330167
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.conditions.op",
                    "data_type": "string",
                    "example_values": [
                        ">"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.conditions.alert.column.name",
                    "data_type": "string",
                    "example_values": [
                        "total_trips"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.conditions.alert.column.display",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.conditions.alert.column.aggregation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.conditions.threshold.value",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.conditions.query_plan",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.created_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-04-27T00:00:52Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.updated_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-04-27T00:00:52Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.warehouse_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.subscriptions.*.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        7499675406330167
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.last_triggered_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully listed alerts"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully listed alerts"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list clusters",
            "description": "List clusters",
            "type": "generic",
            "identifier": "list_clusters",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.data.*.clusters.*.cluster_id",
                    "data_type": "string",
                    "example_values": [
                        "0424-172834-62g8ca83"
                    ],
                    "column_name": "Cluster Id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.clusters.*.cluster_name",
                    "data_type": "string",
                    "example_values": [
                        "Ryan Russell's Personal Compute Cluster"
                    ],
                    "column_name": "Cluster Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.clusters.*.state",
                    "data_type": "string",
                    "example_values": [
                        "RUNNING",
                        "PENDING",
                        "TERMINATED"
                    ],
                    "column_name": "State",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.clusters.*.state_message",
                    "data_type": "string",
                    "example_values": [
                        "Finding instances for new nodes, acquiring more instances if necessary",
                        "Inactive cluster terminated (inactive for 4320 minutes)."
                    ],
                    "column_name": "State Message",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.node_id",
                    "data_type": "string",
                    "contains": [
                        "md5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.private_ip",
                    "data_type": "string",
                    "example_values": [
                        "10.26.211.213"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.instance_id",
                    "data_type": "string",
                    "example_values": [
                        "i-091d43c81afd467b8"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.host_private_ip",
                    "data_type": "string",
                    "example_values": [
                        "10.26.215.174"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.node_attributes.is_spot",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.start_timestamp",
                    "data_type": "numeric",
                    "example_values": [
                        1684533823792
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver.node_aws_attributes.is_spot",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.jdbc_port",
                    "data_type": "numeric",
                    "example_values": [
                        10000
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.clusters.*.spark_conf.spark.master",
                    "data_type": "string",
                    "example_values": [
                        "local[*, 4]"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.spark_conf.spark.databricks.cluster.profile",
                    "data_type": "string",
                    "example_values": [
                        "singleNode"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.start_time",
                    "data_type": "numeric",
                    "example_values": [
                        1682357315089
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.custom_tags.ResourceClass",
                    "data_type": "string",
                    "example_values": [
                        "SingleNode"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.num_workers",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.default_tags.Vendor",
                    "data_type": "string",
                    "example_values": [
                        "Databricks"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.default_tags.Creator",
                    "data_type": "string",
                    "example_values": [
                        "rrussell@splunk.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.default_tags.ClusterId",
                    "data_type": "string",
                    "example_values": [
                        "0424-172834-62g8ca83"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.default_tags.ClusterName",
                    "data_type": "string",
                    "example_values": [
                        "Ryan Russell's Personal Compute Cluster"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.node_type_id",
                    "data_type": "string",
                    "example_values": [
                        "i3.xlarge"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.cluster_cores",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.spark_version",
                    "data_type": "string",
                    "example_values": [
                        "13.0.x-cpu-ml-scala2.12"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.aws_attributes.zone_id",
                    "data_type": "string",
                    "example_values": [
                        "auto"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.aws_attributes.availability",
                    "data_type": "string",
                    "example_values": [
                        "ON_DEMAND"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.aws_attributes.first_on_demand",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.aws_attributes.spot_bid_price_percent",
                    "data_type": "numeric",
                    "example_values": [
                        100
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.cluster_source",
                    "data_type": "string",
                    "example_values": [
                        "UI"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver_healthy",
                    "data_type": "numeric",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.runtime_engine",
                    "data_type": "string",
                    "example_values": [
                        "STANDARD"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.instance_source.node_type_id",
                    "data_type": "string",
                    "example_values": [
                        "i3.xlarge"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.single_user_name",
                    "data_type": "string",
                    "example_values": [
                        "rrussell@splunk.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.spark_context_id",
                    "data_type": "numeric",
                    "example_values": [
                        6926303405002259405,
                        6376353339409838992
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.cluster_memory_mb",
                    "data_type": "numeric",
                    "example_values": [
                        31232
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.creator_user_name",
                    "data_type": "string",
                    "example_values": [
                        "rrussell@splunk.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.data_security_mode",
                    "data_type": "string",
                    "example_values": [
                        "LEGACY_SINGLE_USER_STANDARD"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.last_activity_time",
                    "data_type": "numeric",
                    "example_values": [
                        1684533890371,
                        1682549244222
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver_node_type_id",
                    "data_type": "string",
                    "example_values": [
                        "i3.xlarge"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.enable_elastic_disk",
                    "data_type": "numeric",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.last_restarted_time",
                    "data_type": "numeric",
                    "example_values": [
                        1684533934310,
                        1684533666939,
                        1682357560761
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.last_state_loss_time",
                    "data_type": "numeric",
                    "example_values": [
                        1684533934276,
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.driver_instance_source.node_type_id",
                    "data_type": "string",
                    "example_values": [
                        "i3.xlarge"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.init_scripts_safe_mode",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.autotermination_minutes",
                    "data_type": "numeric",
                    "example_values": [
                        4320
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.effective_spark_version",
                    "data_type": "string",
                    "example_values": [
                        "13.0.x-cpu-ml-scala2.12"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.enable_local_disk_encryption",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully listed clusters"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully listed clusters"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.terminated_time",
                    "data_type": "numeric",
                    "example_values": [
                        1682808455601
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.termination_reason.code",
                    "data_type": "string",
                    "example_values": [
                        "INACTIVITY"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.termination_reason.type",
                    "data_type": "string",
                    "example_values": [
                        "SUCCESS"
                    ]
                },
                {
                    "data_path": "action_result.data.*.clusters.*.termination_reason.parameters.inactivity_duration_min",
                    "data_type": "string",
                    "example_values": [
                        "4320"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create alert",
            "description": "Create a new alert for Splunk SOAR to poll",
            "type": "generic",
            "identifier": "create_alert",
            "read_only": false,
            "parameters": {
                "name": {
                    "description": "Name of channel",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "query_id": {
                    "description": "ID of the query evaluated by the alert",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "column": {
                    "description": "Name of column in the query result to compare in alert evaluation",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "operator": {
                    "description": "Operator used to compare in alert evaluation",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        ">",
                        ">=",
                        "<",
                        "<=",
                        "==",
                        "!="
                    ],
                    "order": 3
                },
                "value": {
                    "description": "Value used to compare in alert evaluation",
                    "data_type": "string",
                    "required": true,
                    "order": 4
                },
                "custom_body": {
                    "description": "Custom body of alert notification",
                    "data_type": "string",
                    "order": 5
                },
                "custom_subject": {
                    "description": "Custom subject of alert notification",
                    "data_type": "string",
                    "order": 6
                },
                "muted": {
                    "description": "Whether or not the alert is muted",
                    "data_type": "boolean",
                    "default": false,
                    "order": 7
                },
                "schedule_failures": {
                    "description": "Number of failures encountered during alert refresh. This counter is used for sending aggregated alert failure email notifications",
                    "data_type": "numeric",
                    "order": 8
                },
                "rearm": {
                    "description": "Number of seconds after being triggered before the alert rearms itself and can be triggered again. If not set, alert will never be triggered again",
                    "data_type": "numeric",
                    "order": 9
                },
                "parent": {
                    "description": "The identifier of the workspace folder containing the alert. The default is the user's home folder",
                    "data_type": "string",
                    "order": 10
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "example_values": [
                        "fc833528-33e6-4f6f-8ea8-3625cf1e778e"
                    ]
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.id",
                    "data_type": "numeric",
                    "example_values": [
                        1234567891234567
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.name",
                    "data_type": "string",
                    "example_values": [
                        "John Doe"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.email",
                    "data_type": "string",
                    "example_values": [
                        "johndoe@example.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.is_db_admin",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.profile_image_url",
                    "data_type": "string",
                    "example_values": [
                        "https://www.gravatar.com/avatar/123456789abcdef123456789abcdef12?s=40&d=identicon"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.id",
                    "data_type": "string",
                    "example_values": [
                        "4cace055-7ffa-48b6-baca-e7d354531d6c"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.name",
                    "data_type": "string",
                    "example_values": [
                        "sample query"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.query",
                    "data_type": "string",
                    "example_values": [
                        "SELECT\n  concat(pickup_zip, '-', dropoff_zip) as route,\n  AVG(fare_amount) as average_fare\nFROM\n  `samples`.`nyctaxi`.`trips`\nGROUP BY\n  1\nORDER BY\n  2 DESC\nLIMIT 1000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.is_safe",
                    "data_type": "boolean",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.apply_auto_limit",
                    "data_type": "boolean",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.folder_node_status",
                    "data_type": "string",
                    "example_values": [
                        "ACTIVE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.options.folder_node_internal_name",
                    "data_type": "string",
                    "example_values": [
                        "tree/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        1234567891234567
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.version",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.is_draft",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.schedule",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.query.created_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T01:44:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.updated_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T01:48:00Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.query.is_archived",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.run_as_role",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.query.data_source_id",
                    "data_type": "string",
                    "example_values": [
                        "468e81e8-b8f4-49f6-a817-3aaa221f3b88"
                    ]
                },
                {
                    "data_path": "action_result.data.*.query.run_as_service_principal_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.rearm",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.state",
                    "data_type": "string",
                    "example_values": [
                        "unknown"
                    ]
                },
                {
                    "data_path": "action_result.data.*.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.op",
                    "data_type": "string",
                    "example_values": [
                        ">"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.muted",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.value",
                    "data_type": "string",
                    "example_values": [
                        "80"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.column",
                    "data_type": "string",
                    "example_values": [
                        "average_fare"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/3042705489298866"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.query_plan",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.options.folder_node_status",
                    "data_type": "string",
                    "example_values": [
                        "ACTIVE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.options.folder_node_internal_name",
                    "data_type": "string",
                    "example_values": [
                        "tree/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_id",
                    "data_type": "numeric",
                    "example_values": [
                        1234567891234567
                    ]
                },
                {
                    "data_path": "action_result.data.*.created_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T02:06:45Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.updated_at",
                    "data_type": "string",
                    "example_values": [
                        "2023-02-22T02:06:45Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.is_archived",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.permission_tier",
                    "data_type": "string",
                    "example_values": [
                        "CAN_MANAGE"
                    ]
                },
                {
                    "data_path": "action_result.data.*.last_triggered_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully created alert"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully created alert"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.parameter.muted",
                    "data_type": "numeric",
                    "example_values": [
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string",
                    "example_values": [
                        "80"
                    ]
                },
                {
                    "data_path": "action_result.parameter.column",
                    "data_type": "string",
                    "example_values": [
                        "average_fare"
                    ]
                },
                {
                    "data_path": "action_result.parameter.custom_body",
                    "data_type": "string",
                    "example_values": [
                        "example template"
                    ]
                },
                {
                    "data_path": "action_result.parameter.custom_subject",
                    "data_type": "string",
                    "example_values": [
                        "example template"
                    ]
                },
                {
                    "data_path": "action_result.parameter.operator",
                    "data_type": "string",
                    "example_values": [
                        ">"
                    ]
                },
                {
                    "data_path": "action_result.parameter.query_id",
                    "data_type": "string",
                    "example_values": [
                        "4cace055-7ffa-48b6-baca-e7d354531d6c"
                    ]
                },
                {
                    "data_path": "action_result.parameter.parent",
                    "data_type": "string",
                    "example_values": [
                        "folders/1234567891234567"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rearm",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.schedule_failures",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete alert",
            "description": "Remove alert for Splunk SOAR to poll",
            "type": "generic",
            "identifier": "delete_alert",
            "read_only": false,
            "parameters": {
                "alert_id": {
                    "description": "ID of the alert to delete",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "contains": [
                        "databricks alert id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully deleted alert"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully deleted alert"
                    ]
                },
                {
                    "data_path": "action_result.parameter.alert_id",
                    "data_type": "string",
                    "example_values": [
                        "fc833528-33e6-4f6f-8ea8-3625cf1e778e"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "perform query",
            "description": "Perform a SQL query on your Databricks instance",
            "type": "generic",
            "identifier": "perform_query",
            "read_only": false,
            "parameters": {
                "statement": {
                    "description": "SQL statement to execute",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "warehouse_id": {
                    "description": "Warehouse upon which to execute a statement",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "wait_timeout": {
                    "description": "The time in seconds the API service will wait for the statement's result. Can be set to 0 or to a value between 5 and 50. When set to 0 the statement will execute in asynchronous mode",
                    "data_type": "numeric",
                    "order": 2
                },
                "on_wait_timeout": {
                    "description": "When in synchronous mode with wait_timeout > 0s the action taken when the timeout is reached",
                    "data_type": "string",
                    "required": true,
                    "order": 3,
                    "value_list": [
                        "CONTINUE",
                        "CANCEL"
                    ],
                    "default": "CANCEL"
                },
                "byte_limit": {
                    "description": "Applies the given byte limit to the statement's result size",
                    "data_type": "numeric",
                    "order": 4
                },
                "catalog": {
                    "description": "Sets default catalog for statement execution, similar to USE CATALOG in SQL",
                    "data_type": "string",
                    "order": 5
                },
                "schema": {
                    "description": "Sets default schema for statement execution, similar to USE SCHEMA in SQL.",
                    "data_type": "string",
                    "order": 6
                },
                "disposition": {
                    "description": "The result disposition",
                    "data_type": "string",
                    "required": true,
                    "order": 7,
                    "value_list": [
                        "INLINE",
                        "EXTERNAL_LINKS"
                    ],
                    "default": "INLINE"
                },
                "format": {
                    "description": "The result format",
                    "data_type": "string",
                    "required": true,
                    "order": 8,
                    "value_list": [
                        "JSON_ARRAY",
                        "ARROW_STREAM"
                    ],
                    "default": "JSON_ARRAY"
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.result.row_count",
                    "data_type": "numeric",
                    "example_values": [
                        1000
                    ]
                },
                {
                    "data_path": "action_result.data.*.result.data_array.*.*",
                    "data_type": "string",
                    "example_values": [
                        "10013-7008"
                    ]
                },
                {
                    "data_path": "action_result.data.*.result.row_offset",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.result.chunk_index",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.status.state",
                    "data_type": "string",
                    "example_values": [
                        "SUCCEEDED"
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.chunks.*.row_count",
                    "data_type": "numeric",
                    "example_values": [
                        1000
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.chunks.*.row_offset",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.chunks.*.chunk_index",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.format",
                    "data_type": "string",
                    "example_values": [
                        "JSON_ARRAY"
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.schema.columns.*.name",
                    "data_type": "string",
                    "example_values": [
                        "route"
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.schema.columns.*.position",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.schema.columns.*.type_name",
                    "data_type": "string",
                    "example_values": [
                        "STRING"
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.schema.columns.*.type_text",
                    "data_type": "string",
                    "example_values": [
                        "STRING"
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.schema.column_count",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.total_row_count",
                    "data_type": "numeric",
                    "example_values": [
                        1000
                    ]
                },
                {
                    "data_path": "action_result.data.*.manifest.total_chunk_count",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.statement_id",
                    "data_type": "string",
                    "example_values": [
                        "01edd5a1-16c6-136e-9b1e-95fc566d511f"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Status: Successfully performed SQL query"
                    ]
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string",
                    "example_values": [
                        "Successfully performed SQL query"
                    ]
                },
                {
                    "data_path": "action_result.parameter.format",
                    "data_type": "string",
                    "example_values": [
                        "JSON_ARRAY"
                    ]
                },
                {
                    "data_path": "action_result.parameter.statement",
                    "data_type": "string",
                    "example_values": [
                        "SELECT concat(pickup_zip, '-', dropoff_zip) as route, AVG(fare_amount) as average_fare FROM `samples`.`nyctaxi`.`trips` GROUP BY 1 ORDER BY 2 DESC LIMIT 1000"
                    ]
                },
                {
                    "data_path": "action_result.parameter.warehouse_id",
                    "data_type": "string",
                    "example_values": [
                        "0123456789abcdef"
                    ]
                },
                {
                    "data_path": "action_result.parameter.wait_timeout",
                    "data_type": "numeric",
                    "example_values": [
                        60
                    ]
                },
                {
                    "data_path": "action_result.parameter.on_wait_timeout",
                    "data_type": "string",
                    "example_values": [
                        "CANCEL"
                    ]
                },
                {
                    "data_path": "action_result.parameter.byte_limit",
                    "data_type": "numeric",
                    "example_values": [
                        1024
                    ]
                },
                {
                    "data_path": "action_result.parameter.catalog",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.schema",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.disposition",
                    "data_type": "string",
                    "example_values": [
                        "INLINE"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "execute notebook",
            "description": "Execute a Databricks notebook",
            "type": "generic",
            "identifier": "execute_notebook",
            "read_only": false,
            "parameters": {
                "notebook_path": {
                    "description": "The path of the notebook to be run in the Databricks workspace or remote repository",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "git_source": {
                    "description": "An optional specification for a remote repository containing the notebook",
                    "data_type": "string",
                    "order": 1
                },
                "existing_cluster_id": {
                    "description": "The ID of an existing cluster to use for all runs of this task",
                    "data_type": "string",
                    "order": 2
                },
                "new_cluster": {
                    "description": "An object specifying the details of the new cluster to use for this task",
                    "data_type": "string",
                    "order": 3
                },
                "libraries": {
                    "description": "An optional list of libraries to be installed on the cluster that executes the task",
                    "data_type": "string",
                    "order": 4
                },
                "timeout_seconds": {
                    "description": "An optional timeout applied to the job",
                    "data_type": "numeric",
                    "order": 5
                },
                "run_name": {
                    "description": "An optional name for the run",
                    "data_type": "string",
                    "order": 6,
                    "default": "Untitled"
                },
                "idempotency_token": {
                    "description": "An optional token that can be used to guarantee the idempotency of job run requests. If a run with the provided token already exists, the request does not create a new run but returns the info of the existing run instead. If a run with the provided token is deleted, an error is returned",
                    "data_type": "string",
                    "order": 7
                },
                "access_control_list": {
                    "description": "List of permissions to set for the run",
                    "data_type": "string",
                    "order": 8
                }
            },
            "output": [],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Ingest tickets from Databricks",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 0
                },
                "end_time": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 1
                },
                "container_id": {
                    "data_type": "string",
                    "description": "Parameter ignored in this app",
                    "order": 2
                },
                "container_count": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 3
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "description": "Parameter ignored in this app",
                    "order": 4
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "pypi": [
            {
                "module": "PyJWT"
            },
            {
                "module": "certifi"
            },
            {
                "module": "charset_normalizer"
            },
            {
                "module": "click"
            },
            {
                "module": "databricks_cli"
            },
            {
                "module": "idna"
            },
            {
                "module": "importlib_metadata"
            },
            {
                "module": "oauthlib"
            },
            {
                "module": "requests"
            },
            {
                "module": "six"
            },
            {
                "module": "tabulate"
            },
            {
                "module": "typing_extensions"
            },
            {
                "module": "urllib3"
            },
            {
                "module": "zipp"
            }
        ]
    },
    "pip39_dependencies": {
        "pypi": [
            {
                "module": "PyJWT"
            },
            {
                "module": "certifi"
            },
            {
                "module": "charset_normalizer"
            },
            {
                "module": "click"
            },
            {
                "module": "databricks_cli"
            },
            {
                "module": "idna"
            },
            {
                "module": "oauthlib"
            },
            {
                "module": "requests"
            },
            {
                "module": "six"
            },
            {
                "module": "tabulate"
            },
            {
                "module": "urllib3"
            }
        ]
    }
}
